0. 키보드로부터 데이터를 입력 받는 방법론
    1) java.util.Scanner
    2) Sconner scan = new Scanner(System. in)
        scan.close();
    3)  int num = scan.nextInt();            // 정수입력
        float num = scan.nextFloat();        // 실수입력
        double num = scan. nextdoblu();     //실수입력
        String str = scan. next();          // 문자열 입력(공백 앞까지 입력 받음)
        String str = scan. nextLine();      // 문자열 입력(엔터까지 입력받음)
                                            // 버퍼비우기 

1. 항과 연산자
    1) 항(opernd) : 연산에 사용되는 값
    2) 연산자(operator) : 항을 이용하여 연산하는 기호 

2. 연산자의 종류
    1) 단항연산자, 이항연산자, 삼항연산자

3. 대입 연산자 (assignment operator)
    1) 변수에 다른 변수나 값을 대입하는 연산자
    2) 이항 연산자 중 우선 순위가 가장 낮은 연산자 
    3) 왼쪽 변수 = 오른쪽 변수(오른쪽 식, 값)  

4. 단항 연산자
    1) 부호 연산자의   
        - 변수의 부호를 유지하거나(+) 바뀜(-)
        - 실제 변수의 부호가 변하려면 대입 연산자를 사용해야 함

    2) 복합 대입 연산자          
        - 대입 연산자와 다른 연산자 함께 쓰임
        - 종류

            a += b          a = a+ b
            a -= b          a = a- b 
            a * =b          a = a* b
            a / =b          a = a/ b
            a %=binary      a= a % b

            변수(L- Value) = 수식(R- Value)

    3) 증가, 감소 연산자
        - 변수의 값을 1 더하거나 1뺄때 사용
        - 연산자가 항의 앞에 있는가 뒤에 있는가에 따라 연산 시점과 결과가 달라짐
        - 증가 연산자
            - ++
            - ++a   전위    a의 값 1 증가 => a의 값 사용
              a++   후위    a의 값 사용 => a의 값 1증가

        - 감소 연산자 
            - --
            - --a   전위    a의 값 1 감소 => a의 값 사용
              a--   후위    a의 값 사용 => a의 값 1 감소

5. 이항연산자 
    1) 산술연산자 
    2) 복합대입연산자
    3) 관계연산자
    4) 논리연산자     

6. 산술연산자
    - 사칙연산자
    - + - *
    - / (몫)
    - % (나머지)

7. 관계 연산자 
    - 연산의 결과가 true(참), false(거짓)으로 반환 됨
    - 비교 연산자 
        ->
         <
         >=
         <=
         == 두 개 항의 값이 같으면 참, 다르면 거짓 반환
         != 두 개 항이 다르면 참, 아니면 거짓을 반환

    - 조건문, 반복문의 조건식으로 많이 사용됨   

8.논리 연산자 
    - && (AND), ||(or), !(NOT).
    - 연산의 결과는 참(true) 아니면 거짓(falsei)
    - 관계 연산자와 혼합하여 사용 됨
    
    - a && b 
        - 논리곱(and 연산)
        - a,b 가 둘 다 참이면 참이고, 그렇지 않으면 거짓
        
    -a || b
        - 논리합(or 연산)
        - a,b 중 하나라도 참이면 참이고, 그렇지 않으면 거짓

    -short circuit evaluation
         - 모든 항이 실행되지 않는 경우 
         - 논리 곱(&&)은 두 항이 모두 true 일 때만 결과가  true 
            -앞의 항의 결과가 false이면 뒤 항의 결과를 평가하지 않음
        -논리 합(||)은 두 항의 결과가 모두 false일 때만 결과가 false 
            - 앞의 항의 결과가 true이면 뒤 항의 결과를 평가하지 않음     

 9.삼항연산자 


            






    

